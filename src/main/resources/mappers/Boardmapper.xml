<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.my.ex.BoardMapper">
	<insert id="createBoard" parameterType="BoardDto">
		<selectKey keyProperty="bId" resultType="Integer" order="BEFORE">
			SELECT seq_mvc_board6.NEXTVAL 
			  FROM dual
		</selectKey>
		INSERT INTO mvc_board6
			(
			bId,
			bName, 
			bTitle, 
			bContent, 
			bGroup,
			bAddress
			)
		VALUES
			(
			#{bId},
			#{bName},
			#{bTitle},
			#{bContent}, 
			seq_mvc_board6.CURRVAL,
			#{bAddress}
		 	)
	</insert>
	
	<select id="existsByTagName" resultType="Integer">
		SELECT COUNT(*)
		  FROM mvc_tag6
		 WHERE tagName = #{tagName}
	</select>
	
	<insert id="createTag" parameterType="TagDto">
		<selectKey keyProperty="tagId" resultType="Integer" order="BEFORE">
			SELECT seq_mvc_tag6.NEXTVAL 
			  FROM dual
		</selectKey>
		INSERT INTO mvc_tag6
			(
			tagId,
			tagName
			)
		VALUES
			(
			#{tagId},
			#{tagName}
			)
	</insert>
	
	<insert id="addTagToPost" parameterType="PostTagDto">
		INSERT INTO mvc_post_tags
			(
			bId,
			tagId
			)
		VALUES
			(
			#{bId},
			#{tagId}
			)
	</insert>
	
	<select id="findTagsByPostId" resultType="TagDto">
		SELECT tagName
		  FROM mvc_post_tags pt
	  	  JOIN mvc_tag6 t ON pt.tagId = t.tagId
		 WHERE bId = #{bId}
	</select>
	
	<select id="findTagIdByName" resultType="Integer">
		SELECT tagId
		  FROM mvc_tag6
		 WHERE tagName = #{tagName}
	</select>
	
	<select id="findAll" resultType="BoardDto">
		SELECT *
		  FROM mvc_board6
		 WHERE bStep = 0 AND
		 	   bIndent = 0
	  ORDER BY bId DESC
	</select>
	
	<select id="detailBoard" resultType="BoardDto">
		SELECT *
		  FROM mvc_board6
		 WHERE bId = #{bId}
	</select>
	
	<update id="updateBoard" parameterType="BoardDto">
		UPDATE mvc_board6
		   SET bName = #{bName},
		   	   bTitle = #{bTitle},
		   	   bContent = #{bContent},
		   	   bAddress = #{bAddress}
		 WHERE bId = #{bId}
	</update>
	
	<delete id="deleteBoard">
		DELETE FROM mvc_board6
		 WHERE bId = #{bId}
	</delete>
	
	<update id="updateHitCount">
		UPDATE mvc_board6
		   SET bHit = bHit + 1
		 WHERE bId = #{bId}
	</update>
	
	<update id="incrementLikesCount">
		UPDATE mvc_board6
		   SET bLike = bLike + 1
		 WHERE bId = #{bId}
	</update>
	
	<update id="decrementLikesCount">
		UPDATE mvc_board6
		   SET bLike = bLike - 1
		 WHERE bId = #{bId} 
	</update>
	
	<select id="getTotalLikes" resultType="Integer">
		SELECT bLike
		  FROM mvc_board6
		 WHERE bId = #{bId}
	</select>
	
	<update id="incrementBookmarksCount">
		UPDATE mvc_board6
		   SET bBookmark = bBookmark + 1
		 WHERE bId= #{bId} 
	</update>
	
	<update id="decrementBookmarksCount">
		UPDATE mvc_board6
		   SET bBookmark = bBookmark - 1
		 WHERE bId = #{bId}
	</update>
	
	<select id="getTotalBookmarks" resultType="Integer">
		SELECT bBookmark
		  FROM mvc_board6
		 WHERE bId = #{bId}
	</select>
	
	<insert id="replyInsert" parameterType="BoardDto">
		INSERT INTO mvc_board6
			(
			bId,
			bName,
			bContent,
			bGroup,
			bStep,
			bIndent
			)
		VALUES
			(
			seq_mvc_board6.nextval,
			#{bName},
			#{bContent},
			#{bGroup},
			#{bStep} + 1,
			#{bIndent} + 1
			)
	</insert>
	
	<update id="replyShape" parameterType="java.util.HashMap">
		UPDATE mvc_board6
		   SET bStep = bStep + 1
		 WHERE bGroup = #{bGroup} 
		   AND bStep > #{bStep}
	</update>
	
	<select id="replyList" resultType="BoardDto">
		SELECT *
		  FROM mvc_board6
		 WHERE bGroup = #{bGroup} 
		   AND bStep > 0 
		   AND bIndent > 0
	  ORDER BY bStep ASC
	</select>
	
	<insert id="replyChildInsert" parameterType="BoardDto">
		INSERT INTO mvc_board6
			 (
			 bId,
			 bName,
			 bContent,
		 	 bGroup,
		 	 bStep,
			 bIndent
			 )
		VALUES
			 (
			 seq_mvc_board6.nextval,
			 #{bName},
			 #{bContent},
			 #{bGroup},
			 #{bStep} + 1,
			 #{bIndent} + 1
			 )
	</insert>
	
	<update id="updateCommentContent" parameterType="java.util.HashMap">
		UPDATE mvc_board6
		   SET bContent = '작성자가 삭제한 댓글입니다.',
		   	   isDeleted = 'Y'
	 	 WHERE bId = #{bId} AND 
	 	EXISTS (
			   SELECT 1 
			     FROM mvc_board6
			    WHERE bGroup = #{bGroup} 
			   	  AND bStep = #{bStep} + 1 
			   	  AND bIndent = 2
			   )
	</update>
	
	<delete id="removeComment" parameterType="java.util.HashMap">
		DELETE FROM mvc_board6
		 WHERE bId = #{bId} 
		 AND NOT EXISTS (
		       			SELECT 1
		       			  FROM mvc_board6
		       	  		 WHERE bGroup = #{bGroup}
		       	  		   AND bStep = #{bStep} + 1 
		       	  		   AND bIndent = 2
		  	   			)
	</delete>
	
	<update id="updateCommentStep" parameterType="java.util.HashMap">
		UPDATE mvc_board6
		   SET bStep = bStep - 1
		 WHERE bStep > #{bStep}
		   AND bGroup = #{bGroup}
	</update>
	
	<delete id="removeReplyIfNoChildReplies" parameterType="java.util.HashMap">
		DELETE FROM mvc_board6
		 WHERE bId IN (
		 			  SELECT bId
		  				FROM mvc_board6
		 			   WHERE bStep = #{bStep} - 1
		 			   	 AND bIndent = 1 
		 			   	 AND isDeleted = 'Y'
		 			   	 AND NOT EXISTS (
		 			   	 	 SELECT 1
		 			   	 	   FROM mvc_board6
		 			   	 	  WHERE bGroup = #{bGroup}
		 			   	 	    AND bStep = #{bStep} <!-- UdateCommentStep 실행 후 삭제된 답글이 있던 자리에 새로운 답글이 오는 경우 -->
		 			   	 	    AND bIndent = 2 	
		 			   	 	 )
 	   				  )
	</delete>
	
	<select id="pagingList" parameterType="java.util.HashMap" resultType="BoardDto">
		SELECT * FROM (
			 SELECT 
        		  t.*,
        		  ROWNUM AS rnum
    		   FROM (
    		   		SELECT * 
    		   		  FROM mvc_board6 
    		   		 WHERE bStep = 0 
    		   		   AND bIndent = 0 
    		   		   <if test="searchText != null and searchText != ''">
    		   		   	   AND ${searchGubun} LIKE '%' || #{searchText} ||'%'
    		   		   </if>
    		   	  <if test="sortType.equals('latest')">   
    		      	 ORDER BY bId DESC
    		      </if>
    		      <if test="sortType.equals('hit')">
    		      	 ORDER BY bHit DESC, bId DESC
    		      </if>
   		   		) t
		)
	 	 WHERE rnum BETWEEN #{pagingStart} AND #{pagingEnd}
	</select>
	
	<select id="commentsPagingList" parameterType="java.util.HashMap" resultType="BoardDto">
		SELECT * FROM (
			 SELECT 
        		  t.*,
        		  ROWNUM AS rnum
    		   FROM (
    		   		SELECT * 
    		   		  FROM mvc_board6 
    		   		 WHERE bGroup = #{bGroup}
                       AND bStep > 0 
    		   		   AND bIndent > 0
    		   	  <if test="commentsSortType.equals('latest')">     
                 	 ORDER BY bStep ASC
                  </if>
                  <if test="commentsSortType.equals('like')">
                     ORDER BY bStep ASC
                 </if>
   		   		) t
		)
	 	 WHERE rnum BETWEEN #{commentsPagingStart} AND #{commentsPagingEnd}
	</select>
	
	<select id="commentsCount" resultType="Integer">
		SELECT COUNT(bId)
		  FROM mvc_board6
		 WHERE bStep > 0 
		   AND bIndent > 0 
		   AND bGroup = #{bGroup} 
		   AND isDeleted = 'N'
	</select>
	
	<select id="commentsAllCount" resultType="Integer">
		SELECT COUNT(bId)
		  FROM mvc_board6
		 WHERE bStep > 0 
		   AND bIndent > 0 
		   AND bGroup = #{bGroup} 
	</select>
	
	<select id="boardCount" resultType="Integer">
		SELECT COUNT(bId)
		  FROM mvc_board6
		 WHERE bStep = 0 
		   AND bIndent = 0
	</select>
	
	<update id="incrementCommentCount">
		UPDATE mvc_board6 
		   SET commentCount = commentCount + 1
		 WHERE bGroup = #{bGroup}
		   AND bStep = 0
		   AND bIndent = 0
	</update>
	
	<update id="decrementCommentCount">
		UPDATE mvc_board6 
		   SET commentCount = commentCount - 1
		 WHERE bGroup = #{bGroup}
		   AND bStep = 0
		   AND bIndent = 0
	</update>
	
	<select id="sort_hitPagingList" parameterType="java.util.HashMap" resultType="BoardDto">
		SELECT * FROM (
			 SELECT 
        		  t.*,
        		  ROWNUM AS rnum
    		   FROM (
    		   		SELECT * 
    		   		  FROM mvc_board6 
    		   		 WHERE bStep = 0 
    		   		   AND bIndent = 0 
    		   		   <if test="searchText != null and searchText != ''">
    		   		   	   AND ${searchGubun} LIKE '%' || #{searchText} ||'%'
    		   		   </if>
    		         ORDER BY bHit DESC, bId DESC
   		   		) t
		)
	 	 WHERE rnum BETWEEN #{pagingStart} AND #{pagingEnd}
	</select>
	
</mapper>